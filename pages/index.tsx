import type { NextPage } from "next";
import Head from "next/head";
import styled from "styled-components";

import { Fable1 } from "../components/chapters/1";
import { Fable2 } from "../components/chapters/2";
import { Fable3 } from "../components/chapters/3";
import { Fable4 } from "../components/chapters/4";
import { Fable5 } from "../components/chapters/5";
import { Fable6 } from "../components/chapters/6";
import { Fable7 } from "../components/chapters/7";
import { Fable8 } from "../components/chapters/8";
import { Fable9 } from "../components/chapters/9";
import { Fable10 } from "../components/chapters/10";
import BasicLayout from "layout/Basic";
import { MainLayout } from "layout/MainLayout";
import { navOptions } from "data/navOptions";
import React, { useEffect, useRef, useState } from "react";

import { gsap } from "gsap/dist/gsap";
import { ScrollToPlugin } from "gsap/dist/ScrollToPlugin";
import { createScrollTriggers } from "helpers/createScrollTriggers";

gsap.registerPlugin(ScrollToPlugin);

const SectionHeader = styled.div`
  height: auto;
  min-height: 20vh;

  cursor: pointer;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;

  margin-bottom: 4em;

  h1 {
    word-break: spaces;
    text-overflow: ellipsis;
    font-size: 16vmin;
    text-align: center;
    padding: 0.6em;
    padding-bottom: 0.2em;
    color: ${(props) => props.theme.colors.red};
  }

  h2 {
    color: red;
    font-size: 8vmin;
    text-align: center;

    @media only screen and (min-width: ${(props) =>
        props.theme.breakpoints.md}) {
      font-size: 2em;
    }
  }

  @media only screen and (min-width: ${(props) => props.theme.breakpoints.md}) {
    h1 {
      font-size: 4em;
      margin-bottom: 0.5em;
    }
  }
`;

const Home: NextPage = () => {
  const sectionRefs = useRef<Record<string, HTMLDivElement>>({});

  const [currentSection, setCurrentSection] = useState<string>();

  useEffect(() => {
    createScrollTriggers(sectionRefs, currentSection, setCurrentSection);
  }, []);

  const addToRefs = (el: any, key: number) => {
    if (el && !sectionRefs.current[key]) {
      sectionRefs.current[key] = el;
    }
  };

  return (
    <>
      <Head>
        <title>Summary of The Richest Man In Babylon</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <BasicLayout>
        <MainLayout currentSection={currentSection} sectionRefs={sectionRefs}>
          <main id="main-panel">
            <nav id="left-overview">
              <ul>
                {navOptions.map((i, idx) => {
                  return (
                    <li
                      className={i.key === currentSection ? "active" : ""}
                      key={i.name}
                      onClick={() => {
                        gsap.to(window, {
                          duration: 2,
                          scrollTo:
                            sectionRefs.current[i.key].offsetTop -
                            (document.getElementById("header")
                              ? document.getElementById("header")!.clientHeight
                              : 72),
                        });
                      }}
                    >
                      {i.name}
                    </li>
                  );
                })}
              </ul>
            </nav>
            <div id="right-content">
              <div id="overflow-wrapper">
                <SectionHeader>
                  <h1>The Richest Man In Babylon</h1>
                  <h2>George S. Clason</h2>
                </SectionHeader>
                <Fable1 id={"1"} title={"1"} ref={(el) => addToRefs(el, 1)} />
                <Fable2 id={"2"} title={"2"} ref={(el) => addToRefs(el, 2)} />
                <Fable3 id={"3"} title={"3"} ref={(el) => addToRefs(el, 3)} />
                <Fable4 id={"4"} title={"4"} ref={(el) => addToRefs(el, 4)} />
                <Fable5 id={"5"} title={"5"} ref={(el) => addToRefs(el, 5)} />
                <Fable6 id={"6"} title={"6"} ref={(el) => addToRefs(el, 6)} />
                <Fable7 id={"7"} title={"7"} ref={(el) => addToRefs(el, 7)} />
                <Fable8 id={"8"} title={"8"} ref={(el) => addToRefs(el, 8)} />
                <Fable9 id={"9"} title={"9"} ref={(el) => addToRefs(el, 9)} />
                <Fable10
                  id={"10"}
                  title={"10"}
                  ref={(el) => addToRefs(el, 10)}
                />
              </div>
            </div>
          </main>
        </MainLayout>
      </BasicLayout>
    </>
  );
};

export default Home;
